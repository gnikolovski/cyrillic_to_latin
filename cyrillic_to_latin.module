<?php

/**
 * @file
 * This is the primary module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\cyrillic_to_latin\CyrillicToLatinManager;

/**
 * Implements hook_help().
 */
function cyrillic_to_latin_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.cyrillic_to_latin':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Converts cyrillic to latin letters on the fly for the Serbian language.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function cyrillic_to_latin_preprocess_field(&$variables) {
  /** @var \Drupal\Core\Config\ConfigFactory $config */
  $config = \Drupal::configFactory()->get('cyrillic_to_latin.settings');
  if (!$config->get('enabled')) {
    return;
  }

  $field_type = $variables['element']['#field_type'];

  // Preprocess string fields.
  if (in_array($field_type, ['string', 'string_long']) && isset($variables['items'][0]['content']['#context']['value'])) {
    $value = $variables['items'][0]['content']['#context']['value'];
    for ($i = 0; $i < count($variables['items']); $i++) {
      $variables['items'][$i]['content']['#context']['value'] = CyrillicToLatinManager::convertCyrillicToLatin($value);
    }
  }
  // Preprocess text fields.
  elseif (in_array($field_type, ['text', 'text_long', 'text_with_summary']) && isset($variables['items'][0]['content']['#text'])) {
    $value = $variables['items'][0]['content']['#text'];
    for ($i = 0; $i < count($variables['items']); $i++) {
      $variables['items'][$i]['content']['#text'] = CyrillicToLatinManager::convertCyrillicToLatin($value);
    }
  }
  // Preprocess list text fields.
  elseif ($field_type == 'list_string' && isset($variables['items'][0]['content']['#markup'])) {
    $value = $variables['items'][0]['content']['#markup'];
    for ($i = 0; $i < count($variables['items']); $i++) {
      $variables['items'][$i]['content']['#markup'] = CyrillicToLatinManager::convertCyrillicToLatin($value);
    }
  }
  // Preprocess the plain address field formatter.
  elseif ($field_type == 'address' && isset($variables['items'][0]['content']['#country']['name'])) {
    $country_name = $variables['items'][0]['content']['#country']['name'];
    for ($i = 0; $i < count($variables['items']); $i++) {
      $variables['items'][$i]['content']['#country']['name'] = CyrillicToLatinManager::convertCyrillicToLatin($country_name);
    }
  }
  // Preprocess the default address field formatter.
  elseif ($field_type == 'address' && isset($variables['items'][0]['content']['country']['#value'])) {
    $country_name = $variables['items'][0]['content']['country']['#value'];
    for ($i = 0; $i < count($variables['items']); $i++) {
      $variables['items'][$i]['content']['country']['#value'] = CyrillicToLatinManager::convertCyrillicToLatin($country_name);
    }
  }
}
